# c 2006 makalumedia
# author james.anderson@makalumedia.com
# 
# rss feed file for WordCountJournal entries in a given journal
# implemented based on FeedTools
# 
# 200612055 james.anderson initial
# 
  VERSIONS[__FILE__] = "$Id:$"

  feed = feed = FeedTools::Feed.new
  feed.title = "WCJ : #{@journal.owner.login} : #{@journal.title}"
  feed.subtitle = @journal.description || ""
  feed.author.name = @journal.owner.name
  feed.link = url_for({:only_path=> false}.merge(@journal.url_hash))
  feed.published = @journal.updated_at
  settings = feed_settings()
  limit = settings[:page_size]

  @journal.entries.each { |j_entry|
      if ( (limit -= 1) < 0 )
        break
      end
      if (j_entry.published?())
        entry = FeedTools::FeedItem.new
        feed.entries << entry
        entry.title = j_entry.date.to_s
        entry.time = j_entry.updated_at
        entry.published = j_entry.created_at
        entry.updated = j_entry.updated_at
        alt = ( settings[:images_p] ? j_entry.photo : nil )
        entry.content =
          "<div>" +
          ( alt ?
            "<div style='float: left; margin: 0px 5px 5px 0px;'><a href='#{photo_or_default(j_entry)}'><img alt='{alt}' src='#{photo_or_default(j_entry, :thumb)}' width='100' height='100' border='0' /></a></div>" :
            "" ) +
          ( settings[:full_text_p] ? j_entry.body_filtered() : j_entry.excerpt() ) + 
          "</div>"
        logger.debug(entry.inspect)
        entry.link = url_for({:only_path=> false}.merge(j_entry.url_hash))
        # puts("rss entry: #{entry.inspect}: [#{entry.title}] [#{entry.content.inspect}] [#{entry.link}]")
      end
      }

  feed.build_xml(settings[:encoding], settings[:version], xml);
